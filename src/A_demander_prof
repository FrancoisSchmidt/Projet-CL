- Demander M.Champeau quand on doit créer les serveurs TCP avec les nouveaux protocoles quand on passe de la fenêtre de connexion a la fenetre de chat
Il faut changer dynamiquement de protocole (quand on passe de login a register) Client envoie message à serveur pour dire qu'on change de protocole
Quand on appuie sur le bouton "create new acount", il faut dire au serveur : je veux faire ça. D'ou interet message début/fin échange
Serait bien : méthode setProtocole dans la classe ServeurTCP

Passer par un Thread.
Processur transaction execute le protocole pour un seul client.

Créer une classe MonGrosProtocole. Il faut réappliquer le pattern stratégie dans la classe protocole

Chaque client va executer la fonction execute du protocole dans son propre contexte (dans un thread)
Il faut mettre une variable locale à la fonction execute -> alors à celle là on peut changer sa valeur et cela n'aura
pas d'impact sur le serveur et sur l'INSTANCE de la variable protocole

Dans nouvelle classe MonGrosProtocole, qui encapsule tous les autres protocoles
Dans l'execute de ce protocole -> variable LOCALE a cette méthode ProtocoleCourant de type Protocole. C'est elle qu'on fait changer
avec des new ProtocoleLogin et new ProtocoleRegister

SI je recois du client "create new account" alors je mets à jour ma variable ProtocoleCourant et je execute dessus.
SI jamais je recois le "create new account" -> protocoleCourant = new ProtocoleRegster() -> protocoleCourant.execute()

On est dans grosProtocole. On execute le protocole Login. Si une méthode execute se termine, ça revient dans le grosProtocole
Par contre ça sera dans le protocoleLogin qu'on devra changer le protocoleCourant du grosProtocole
Penser changer définition d'execute



- Liste des gens connectés : ou peut-on stocker ces informations ?
Contexte contient toutes les données de l'appli (notamment les users connectés)
Objet contexte = point d'entrée vers la base de données de tous les objets de la discussion
Liste users, liste topics, etc.